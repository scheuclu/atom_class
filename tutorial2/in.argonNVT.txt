# Tutorial 1 - LJ Particles - NVT equilibrium
#
# Markus Schöberl
# m.schoeberl@tum.de
# Professur für Kontinuumsmechanik
# Technische Universität München
#
# November 2016
#

variable InitLatPar equal 5.260

# ----- INITIALIZATION

# selecting units (it is important to be consistent)
units           real
# choose dimension of problem
dimension       3
# select boundary conditions
boundary        p p p
# we are handling and atomistic simulation
atom_style      atomic

# ----- ATOM DEFINITION

# define lattice and lattice constant
lattice         fcc ${InitLatPar} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
# create a block-region with the name box dimension of one lattice unit in each direction
# desired size is around six times the equibrilated unit cell
# Since 32/5.276 ~= 6
region          box block 0 6 0 6 0 6 units lattice
# given this region create a simulation box with ID 1
create_box      1 box

# ----- CREATE ATOMS

# finally place the atoms on the lattice places
create_atoms    1 box
# in the case one wants enforce velocities right in the beginning
#create_atoms   1 random 300 458887 box
# if needed for bigger systems: replicate unit cell
replicate       1 1 1
# assign mass to atoms of group with ID 1
mass            1 39.948

# ----- DEFINE INTERATOMIC POTENTIAL

# define how the atoms interact: Lennard-Jones potential with cut
pair_style      lj/cut 8.5
# coefficients of potential: assigning for all atoms, epsilon [energy units] sigma [distance units]
pair_coeff      * * 0.23818 3.405

# ----- COMPUTES

# compute the potential energy per atom
compute         eng all pe/atom
# computes the final energy of the cell system
compute         eatoms all reduce sum c_eng

# ----- EQUILIBRATION

# in case other simulation was running before set timestep to zero
reset_timestep	0
# set an appropriate timesetp for time integration
timestep       20

# assign velocity to particles according to temperature and seed
# additional parameters for particles with rotation
velocity all create 180 12345 mom yes rot no

## comment: you can also remove the velocity command which means starting at
## a temperature of T = 0K. But then you will need to heat up the system
## choosing T_start = 0K and T_end = 180K for the fix 1 all nvt command.

# thermostat integration for simulating the desired ensemble
# integration on Nose-Hoover hamiltionian equations of motion
fix 1 all nvt temp 180 180 100
# FOR BERENDSEN
#fix 1 all nve
#fix 2 all temp/berendsen 180 180 100

# output thermodynamics (T,E,P,etc.) every N=100 step
thermo 100
# specify the thermodynamics to calculate and show as output
thermo_style custom step lx ly lz press pxx pyy pzz pe temp pe ke etotal

# dump command for writing the trajectories for every N=250 steps
dump 1 all atom 250 ./dump/dump.equi_dt20_*.atom

# Run for the simulation for desired amount of timesteps until equilibration
logfile log.argoNVT_dt20
run 20000

# the regular input script for finding the equilibrium state ends here

###############################################################################################
# the following lines just indicate possible further production step after the equilibration
###############################################################################################

# for removing fix 1
#unfix 1

# for removing the dump 1 command
#undump 1

# change the log file name
#log production.log

# enforcing another ensemble or the same for the production step
#fix 1 all nvt temp 180 180 100

# reset time step to zero
#reset_timestep 0

# set new time step
#timestep 5

# run more steps
#run 1000000

quit
